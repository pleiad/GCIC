program: ID ARROW RPAREN
##
## Ends in an error in state: 20.
##
## term -> fact ARROW . term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## fact ARROW
##

After an arrow, a term is expected.

program: ID RPAREN
##
## Ends in an error in state: 40.
##
## program -> term . EOF [ # ]
##
## The known suffix of the stack is as follows:
## term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 19, spurious reduction of production term -> fact
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_FORALL LPAREN ID COLON ID RPAREN COMMA RPAREN
##
## Ends in an error in state: 16.
##
## term -> KWD_FORALL nonempty_list(arg) COMMA . term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_FORALL nonempty_list(arg) COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_FORALL LPAREN ID COLON ID RPAREN DOT
##
## Ends in an error in state: 15.
##
## term -> KWD_FORALL nonempty_list(arg) . COMMA term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_FORALL nonempty_list(arg)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 24, spurious reduction of production nonempty_list(arg) -> arg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_FORALL RPAREN
##
## Ends in an error in state: 14.
##
## term -> KWD_FORALL . nonempty_list(arg) COMMA term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_FORALL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA LPAREN ID COLON ID KWD_LET
##
## Ends in an error in state: 26.
##
## arg -> LPAREN nonempty_list(id) COLON term . RPAREN [ LPAREN DOT COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN nonempty_list(id) COLON term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 19, spurious reduction of production term -> fact
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA LPAREN ID COLON ID RPAREN COMMA
##
## Ends in an error in state: 30.
##
## term -> KWD_LAMBDA nonempty_list(arg) . DOT term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LAMBDA nonempty_list(arg)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 24, spurious reduction of production nonempty_list(arg) -> arg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA LPAREN ID COLON ID RPAREN DOT RPAREN
##
## Ends in an error in state: 31.
##
## term -> KWD_LAMBDA nonempty_list(arg) DOT . term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LAMBDA nonempty_list(arg) DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA LPAREN ID COLON ID RPAREN RPAREN
##
## Ends in an error in state: 24.
##
## nonempty_list(arg) -> arg . [ DOT COMMA ]
## nonempty_list(arg) -> arg . nonempty_list(arg) [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## arg
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA LPAREN ID COLON RPAREN
##
## Ends in an error in state: 13.
##
## arg -> LPAREN nonempty_list(id) COLON . term RPAREN [ LPAREN DOT COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN nonempty_list(id) COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA LPAREN ID RPAREN
##
## Ends in an error in state: 28.
##
## nonempty_list(id) -> id . [ COLON ]
## nonempty_list(id) -> id . nonempty_list(id) [ COLON ]
##
## The known suffix of the stack is as follows:
## id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA LPAREN RPAREN
##
## Ends in an error in state: 11.
##
## arg -> LPAREN . nonempty_list(id) COLON term RPAREN [ LPAREN DOT COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LAMBDA RPAREN
##
## Ends in an error in state: 10.
##
## term -> KWD_LAMBDA . nonempty_list(arg) DOT term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LAMBDA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LET ID COLON ID EQUAL ID KWD_IN RPAREN
##
## Ends in an error in state: 36.
##
## term -> KWD_LET id COLON term EQUAL term KWD_IN . term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LET id COLON term EQUAL term KWD_IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LET ID COLON ID EQUAL ID RPAREN
##
## Ends in an error in state: 35.
##
## term -> KWD_LET id COLON term EQUAL term . KWD_IN term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LET id COLON term EQUAL term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 19, spurious reduction of production term -> fact
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LET ID COLON ID EQUAL RPAREN
##
## Ends in an error in state: 34.
##
## term -> KWD_LET id COLON term EQUAL . term KWD_IN term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LET id COLON term EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LET ID COLON ID RPAREN
##
## Ends in an error in state: 33.
##
## term -> KWD_LET id COLON term . EQUAL term KWD_IN term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LET id COLON term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 19, spurious reduction of production term -> fact
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LET ID COLON RPAREN
##
## Ends in an error in state: 9.
##
## term -> KWD_LET id COLON . term EQUAL term KWD_IN term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LET id COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LET ID RPAREN
##
## Ends in an error in state: 8.
##
## term -> KWD_LET id . COLON term EQUAL term KWD_IN term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LET id
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_LET RPAREN
##
## Ends in an error in state: 6.
##
## term -> KWD_LET . id COLON term EQUAL term KWD_IN term [ RPAREN KWD_IN EQUAL EOF ]
##
## The known suffix of the stack is as follows:
## KWD_LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_UNIVERSE RPAREN
##
## Ends in an error in state: 4.
##
## atom -> KWD_UNIVERSE . INT [ RPAREN LPAREN KWD_UNKNOWN KWD_UNIVERSE KWD_IN ID EQUAL EOF ARROW ]
##
## The known suffix of the stack is as follows:
## KWD_UNIVERSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: KWD_UNKNOWN RPAREN
##
## Ends in an error in state: 2.
##
## atom -> KWD_UNKNOWN . INT [ RPAREN LPAREN KWD_UNKNOWN KWD_UNIVERSE KWD_IN ID EQUAL EOF ARROW ]
##
## The known suffix of the stack is as follows:
## KWD_UNKNOWN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LPAREN ID KWD_LET
##
## Ends in an error in state: 38.
##
## atom -> LPAREN term . RPAREN [ RPAREN LPAREN KWD_UNKNOWN KWD_UNIVERSE KWD_IN ID EQUAL EOF ARROW ]
##
## The known suffix of the stack is as follows:
## LPAREN term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 19, spurious reduction of production term -> fact
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: LPAREN RPAREN
##
## Ends in an error in state: 1.
##
## atom -> LPAREN . term RPAREN [ RPAREN LPAREN KWD_UNKNOWN KWD_UNIVERSE KWD_IN ID EQUAL EOF ARROW ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

program: RPAREN
##
## Ends in an error in state: 0.
##
## program' -> . program [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>
