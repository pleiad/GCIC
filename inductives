inductive bool : Type0 = 
| false : bool 
| true : bool
;;

def if (a : Type1) (b : bool) (tb fb : a) : a =
match@bool b as z return a with 
| false => fb 
| true => tb 
end;;

inductive nat : Type0 =
| zero : nat 
| succ (n : nat) : nat
;;

inductive list (a : Type0) : Type0 =
| nil : list a
| cons (hd : a) (tl : list a) : list a
;;

def tl (a : Type0) (ls : list a) : list a = 
match@list ls as z return list a with 
| nil a => nil a
| cons a x xs => xs 
end;;

def is_empty (a : Type0) (ls : list a) : bool = 
match@list ls as z return bool with 
| nil bool => true 
| cons bool x xs => false 
end;;

def almost_safe_head (a : Type0) (ls : list a) : if Type0 (is_empty a ls) nat a = 
  match@list ls as z return if Type0 (is_empty a ls) nat a with 
  | nil nat => zero 
  | cons a x xs => x 
end;;
